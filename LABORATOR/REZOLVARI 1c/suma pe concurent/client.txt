#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

int main(){
    int c;
    struct sockaddr_in server_addr;

    //socket
    c= socket(AF_INET, SOCK_DGRAM, 0);
    if(c<0){
        perror("Error on socket!\n");
        return 1;
    }

    //sendto, recvfrom
    server_addr.sin_family= AF_INET;
    server_addr.sin_port= htons(1234);
    server_addr.sin_addr.s_addr= inet_addr("127.0.0.1");
    
    int l= sizeof(server_addr);

    int conn=1;
    printf("Trimit %d\n", conn);
    conn= htonl(conn);
    sendto(c, &conn, sizeof(int), 0, (struct sockaddr*)&server_addr, sizeof(server_addr));

    int port;
    //primesc noul port al serverului
    recvfrom(c, &port, sizeof(int), MSG_WAITALL, (struct sockaddr*)&server_addr, &l);
    port= ntohs(port);
    printf("Am primit portul: %d\n", port);

    //struct sockaddr_in addr_noua;
    server_addr.sin_port= htons(port);

    int a, b, suma;
    printf("a= "); scanf("%d", &a);
    printf("b= "); scanf("%d", &b);
    
    printf("Trimit %d\n", a);
    a= htonl(a);
    sendto(c, &a, sizeof(int), 0, (struct sockaddr*)&server_addr, sizeof(server_addr));
    
    printf("Trimit %d\n", b);
    b= htonl(b);
    sendto(c, &b, sizeof(int), 0, (struct sockaddr*)&server_addr, sizeof(server_addr));
    
    recvfrom(c, &suma, sizeof(int), MSG_WAITALL, (struct sockaddr*)&server_addr, &l);
    suma= ntohl(suma);
    printf("Am primit suma: %d\n", suma);
    
    //close
    close(c);

    return 0;
}
