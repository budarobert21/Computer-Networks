#include <sys/types.h>
#include <sys/socket.h>
#include <stdio.h>
#include <netinet/in.h>
#include <netinet/ip.h>
#include <string.h>
#include <arpa/inet.h>

#include <stdlib.h>
#include <unistd.h>

int main() {
        int s;
        struct sockaddr_in server, client;
        int c, l, i;

        s = socket(AF_INET, SOCK_DGRAM, 0);
        if (s < 0)
        {
                printf("Eroare la crearea socketului server\n");
                return 1;
        }

        memset(&server, 0, sizeof(server));
        server.sin_port = htons(1234);
        server.sin_family = AF_INET;
        server.sin_addr.s_addr = INADDR_ANY;

        if (bind(s, (struct sockaddr *) &server, sizeof(server)) < 0)
        {
                printf("Eroare la bind\n");
                return 1;
        }

        l = sizeof(client);
        memset(&client, 0, sizeof(client));

        printf("Incepem primirea\n");

        while(1)
        {
                int a,b;
                recvfrom(s,&a, sizeof(int), 0, (struct sockaddr *) &client, &l);
                recvfrom(s,&b, sizeof(int), 0, (struct sockaddr *) &client, &l);
                a=ntohl(a);
                b=ntohl(b);
                printf("NUMERELE SUNT: %d SI %d",a,b);

                int cmmdc,cmmmc;

                cmmmc=a*b;
                while(a!=b)
                {
                        if(a>b) a=a-b;
                        else b=b-a;
                }
                cmmdc=a;
                cmmmc=cmmmc/cmmdc;

                cmmmc=htonl(cmmmc);
                cmmdc=htonl(cmmdc);
                sendto(s,&cmmdc, sizeof(int), 0, (struct sockaddr *) &client, sizeof(client));
                sendto(s,&cmmmc, sizeof(int), 0, (struct sockaddr *) &client, sizeof(client));
        }


        close(s);
}