#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

int main()
{
        int c,s;
        struct sockaddr_in client_addr,server_addr;

        //fac socket
        s=socket(AF_INET,SOCK_STREAM,0);
        if(s<0)
        {
                perror("EROARE LA SOCKET SERVER!");
                return 1;
        }

        //fac bind
        server_addr.sin_family=AF_INET;
        server_addr.sin_port=htons(3083);
        server_addr.sin_addr.s_addr=inet_addr("127.0.0.1");

        if(bind(s,(struct sockaddr*)&server_addr,sizeof(server_addr))<0)
        {
                perror("EROARE LA BIND!");
                return 1;
        }

        //fac listen, aici devine serverul server
        listen(s,5);

        while(1)
        {
                //accept
                int size=sizeof(client_addr);
                c=accept(s,(struct sockaddr*)&client_addr,&size);

                    printf("S-A CONECTAT UN CLIENT!\n");

                //server concurent
                if(fork()==0)
                {
                        int len;
                        char aux;

                        recv(c,&len,sizeof(int),MSG_WAITALL);
                        len=ntohl(len);
                        char sir[len];
                        recv(c,sir,len*sizeof(char),MSG_WAITALL);

                        char chr;
                        recv(c,&chr,sizeof(char),MSG_WAITALL);

                        int rez[len];
                        int index=0;
                        for(int i=0;i<=len;i++)
                        {
                                if(sir[i]==chr)
                                {
                                        rez[index]=i;
                                        rez[index]=htonl(rez[index]);
                                        index++;
                                }
                        }

                        index=htonl(index);
                        send(c,&index,sizeof(int),0);
                        send(c,rez,ntohl(index)*sizeof(int),0);
                }

                    close(c);
                    //return 0;

        }

        return 0;
}